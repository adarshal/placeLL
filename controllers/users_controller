const User = require('../models/users');
const path = require('path');
const fs = require('fs'); // file sys , used for del files(avatar) via multer

module.exports.profile = function (req, res) {
    User.findById(req.params.id, function (err, user) {
        if (user) {
            return res.render('user_profile', {
                title: 'profile',
                profile_user: user
            });
        }
    })

}

//signup page
module.exports.signup = function (req, res) {

    if (req.isAuthenticated()) {
        console.log('hereree');
        return res.redirect('/');
    }
    return res.render('signup', {
        title: 'Sign Up to codeial'
    })
}

//sign in page
module.exports.signin = function (req, res) {
    
    if (req.isAuthenticated()) {
        return res.redirect('back');//redirect back if already signed in
    }
    return res.render('signin', {
        title: 'Login to placeLL!!'
    })
}


module.exports.createAccount = function (req, res) {
    if (req.body.password != req.body.confirmPassword) {
        req.flash('error', 'Password is not matching');
        return res.redirect('back');
    }

    User.findOne({ email: req.body.email }, function (err, user) {
        if (err) { console.log('Error in finding email on signup page'); return }
        if (!user) {

            User.create(
                req.body
                //old method used instead of directly using req.body
                // {
                // email: req.body.email,
                // password: req.body.password,
                // name: req.body.accountHolder
                // }
                , function (err, newUser) {
                    if (err) { console.log('Error in creating User ', err); return; }

                    req.flash('success', 'Account created successfully');
                    return res.redirect('/users/signin');
                })

        } else {
            req.flash('error', 'Error! email id is already in use');
            return res.redirect('back');
        }
    })

}


// signin Auth process creates session
module.exports.loginCreateSession = function (req, res) {
    req.flash('success', 'login successfull')
    return res.redirect('/');
}



// signout process | destroy session
module.exports.signout = function (req, res) {
    // res.clearCookie('user_id'); // old manual method not used
    req.logout(function (err) { // function by passport
        if (err) { return next(err); }
        req.flash('success', 'log out successfull')
        res.redirect('/');
    });
}

// update profile
module.exports.update = async function (req, res) {

    if (req.params.id == req.user.id) {
        try {
            let user = await User.findById(req.params.id);  //as we used multipart enc we cant get data from params
            User.uploadedAvatar(req, res, function (err) {
                if (err) {
                    console.log('**** multer error', err);
                }
                user.accountHolder = req.body.accountHolder;
                user.email = req.body.email;
                if (req.file) {
                    // adding the path of uploaded file into avtar field in user
                    if(user.avatar){
                        if (fs.existsSync(path.join(__dirname,'..',user.avatar))) {
                            //file exists
                            fs.unlinkSync(path.join(__dirname,'..',user.avatar))
                          }
                       
                    }
                    user.avatar = User.avatarPath + '/' + req.file.filename
                }
                user.save();
                return res.redirect('back');

            })


        } catch (error) {
            req.flash('error', 'Error in update ');
            console.log(error)
            return res.redirect('back');
        }

    } else {
        req.flash('error', 'Unauthorized');
        return res.status(401).send('Unauthorized');
    }


    //&&&& old now conv to async
    // if(req.params.id == req.user.id){
    //  //&&l&&l //  User.findByIdAndUpdate(req.params.id,{name:req.body.name,email:req.body.email}, function(err,user))//same as below. as boay contais only these 2
    //     User.findByIdAndUpdate(req.params.id,req.body, function(err,user){
    //         if(err){
    //             console.log(err);
    //         }
    //         return res.redirect('back');
    //     });
    // }else{
    //     return res.status(401).send('Unauthorized');
    // }

}
